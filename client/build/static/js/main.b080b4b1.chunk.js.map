{"version":3,"sources":["components/Home.js","redux/actions/QuestionsActions.js","redux/actions/UsersActions.js","components/Question.js","components/Score.js","App.js","redux/reducers/QuestionsReducer.js","redux/reducers/UsersReducer.js","redux/reducers/reducers.js","index.js"],"names":["Home","dispatch","useDispatch","history","useHistory","useState","name","changeName","useEffect","a","axios","get","data","type","payload","class","Form","Group","controlId","Label","Control","placeholder","onChange","e","target","value","Button","variant","className","onClick","setName","push","Question","currentQuestion","useSelector","state","Questions","undefined","question","answers","index","text","map","answer","isCorrect","handleClick","Score","score","User","App","Container","path","exact","QuestionsReducer","questions","action","UsersReducer","allReducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b080b4b1.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setName } from '../redux/actions/UsersActions';\r\nimport { getQuestions } from '../redux/actions/QuestionsActions';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [name, changeName] = useState('');\r\n  useEffect(() => {\r\n    dispatch(getQuestions());\r\n  }, []);\r\n\r\n  const handleSubmit = () => {\r\n    dispatch(setName(name));\r\n    history.push('/question');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 class=\"mb-3\">Enter your name to start the quiz</h1>\r\n      <Form>\r\n        <Form.Group controlId=\"Name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter your name\"\r\n            onChange={(e) => changeName(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" className=\"submit-btn\" onClick={handleSubmit}>\r\n          Start !\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/questions';\r\n\r\nexport const getQuestions = () => async (dispatch) => {\r\n  const { data } = await axios.get(baseUrl);\r\n  dispatch({ type: 'GET_QUESTIONS', payload: data });\r\n};\r\n\r\nexport const nextQuestion = () => {\r\n  return {\r\n    type: 'NEXT_QUESTION',\r\n    payload: null,\r\n  };\r\n};\r\n","export const setName = (name) => {\r\n  return {\r\n    type: 'SET_NAME',\r\n    payload: name,\r\n  };\r\n};\r\n\r\nexport const incrementScore = () => {\r\n  return {\r\n    type: 'INCREMENT_SCORE',\r\n    payload: null,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { incrementScore } from '../redux/actions/UsersActions';\r\nimport { nextQuestion } from '../redux/actions/QuestionsActions';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst Question = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const currentQuestion = useSelector(\r\n    (state) => state.Questions.currentQuestion\r\n  );\r\n\r\n  const handleClick = (index) => {\r\n    if (currentQuestion.question.answers[index].isCorrect)\r\n      dispatch(incrementScore());\r\n    if (currentQuestion.index === 4) return history.push('/score');\r\n    dispatch(nextQuestion());\r\n  };\r\n  if (currentQuestion.question.answers === undefined)\r\n    return <div>There was an error</div>;\r\n  else {\r\n    return (\r\n      <div>\r\n        <h1 class=\"mb-3\">Question {currentQuestion.index + 1}</h1>\r\n        <h4 class=\"mb-3\">{currentQuestion.question.text}</h4>\r\n        <ol type=\"A\">\r\n          {currentQuestion.question.answers.map((answer, index) => (\r\n            <li className=\"mb-2\" key={index} onClick={() => handleClick(index)}>\r\n              {answer.text}\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Question;\r\n","import userEvent from '@testing-library/user-event';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Score = () => {\r\n  const score = useSelector((state) => state.User.score);\r\n  return (\r\n    <div>\r\n      <h1 class=\"mb-3\">Congrats you finished the quiz !</h1>\r\n      <h4 class=\"mb-3\">You answered {score} questions correctly </h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Score;\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport Question from './components/Question';\r\nimport Score from './components/Score';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Container>\r\n        <div class=\"p-5 text-center bg-light m-5\">\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/question\">\r\n              <Question />\r\n            </Route>\r\n            <Route path=\"/score\">\r\n              <Score />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Container>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n{\r\n  /* <Container className=\"name-form\">\r\n      <h1 className=\"lead center\">Enter your name to start the quiz</h1>\r\n\r\n      <Form>\r\n        <Form.Group controlId=\"Name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter your name\" />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\" className=\"submit-btn\">\r\n          Start !\r\n        </Button>\r\n      </Form>\r\n    </Container> */\r\n}\r\n","const QuestionsReducer = (\r\n  state = {\r\n    questions: [],\r\n    currentQuestion: { index: 0, question: {} },\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case 'GET_QUESTIONS': {\r\n      return (state = {\r\n        questions: action.payload,\r\n        currentQuestion: { index: 0, question: action.payload[0] },\r\n      });\r\n    }\r\n    case 'NEXT_QUESTION': {\r\n      return {\r\n        ...state,\r\n        currentQuestion: {\r\n          index: state.currentQuestion.index + 1,\r\n          question: state.questions[state.currentQuestion.index + 1],\r\n        },\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default QuestionsReducer;\r\n","const UsersReducer = (state = { name: '', score: 0 }, action) => {\r\n  switch (action.type) {\r\n    case 'SET_NAME':\r\n      return (state = { name: action.payload, score: 0 });\r\n    case 'INCREMENT_SCORE':\r\n      return { ...state, score: state.score + 1 };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default UsersReducer;\r\n","import { combineReducers } from 'redux';\r\nimport QuestionsReducer from './QuestionsReducer';\r\nimport UsersReducer from './UsersReducer';\r\n\r\nconst allReducers = combineReducers({\r\n  Questions: QuestionsReducer,\r\n  User: UsersReducer,\r\n});\r\n\r\nexport default allReducers;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport './bootstrap.min.css';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport allReducers from './redux/reducers/reducers';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst initialState = {};\r\nconst store = createStore(allReducers, initialState, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}